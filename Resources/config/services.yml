parameters:
  container.autowiring.strict_mode: true

  # workaround for JMS Serializer
  jms_serializer.identical_property_naming_strategy.class: JMS\Serializer\Naming\IdenticalPropertyNamingStrategy
  jms_serializer.json_deserialization_visitor.class: Erp\Bundle\CoreBundle\Serializer\JsonOrArrayDeserializationVisitor

services:

  _defaults:
    # automatically injects dependencies in your services
    autowire: true
    # automatically registers your services as commands, event subscribers, etc.
    autoconfigure: true
    # this means you cannot fetch services directly from the container via $container->get()
    # if you need to do this, you can override this setting on individual services
    public: false

  Erp\Bundle\CoreBundle\:
    resource: '../../*'
    # you can exclude directories or files
    # but if a service is unused, it's removed anyway
    exclude: '../../{Collection,Entity,Security,Serializer,Infrastructure/ORM/Repository}'

  Erp\Bundle\CoreBundle\Controller\:
    resource: '../../Controller'
    tags: ['controller.service_arguments']

  # workaround for JMS Serializer
  jms_serializer.identical_property_naming_strategy:
      class: "%jms_serializer.identical_property_naming_strategy.class%"
      public: false

#  erp_core.serializer.doctrine_object_constructor:
#    class: "%jms_serializer.doctrine_object_constructor.class%"
#    arguments:
#      - "@doctrine"
#      - "@jms_serializer.unserialize_object_constructor"
#    public: false

#  jms_serializer.doctrine_object_constructor:
#    class: Erp\Bundle\CoreBundle\Serializer\InitializedObjectConstructor
#    arguments:
#      - "@erp_core.serializer.doctrine_object_constructor"
#    public: false

  erp_core.serializer.naming_strategy:
    class: "%jms_serializer.serialized_name_annotation_strategy.class%"
    arguments:
      - "@jms_serializer.identical_property_naming_strategy"
    public: false

  jms_serializer.naming_strategy:
    alias: erp_core.serializer.naming_strategy
    public: false

  jms_serializer.object_constructor:
    alias: jms_serializer.doctrine_object_constructor
    public: true

#  jms_serializer.object_constructor:
#    alias: "%jms_serializer.doctrine_object_constructor%"
#    public: false

  erp_core.collection_factory:
    class: Erp\Bundle\CoreBundle\Collection\CollectionFactory

  erp_core.initialized_object_constructor:
    class: Erp\Bundle\CoreBundle\Serializer\InitializedObjectConstructor
    public: false
    arguments:
      - "@jms_serializer.object_constructor"

  jms_serializer.serializer:
    class: Erp\Bundle\CoreBundle\Serializer\Serializer
    public: true
    arguments:
      - "@jms_serializer.metadata_factory"
      - "@jms_serializer.handler_registry"
      - "@erp_core.initialized_object_constructor"
      - "@=service('erp_core.collection_factory').map()"
      - "@=service('erp_core.collection_factory').map()"
      - "@jms_serializer.event_dispatcher"
      - "@?jms_serializer.type_parser"
      - ~
    calls:
      - [setSerializationContextFactory, ["@jms_serializer.serialization_context_factory"]]
      - [setDeserializationContextFactory, ["@jms_serializer.deserialization_context_factory"]]

  Erp\Bundle\CoreBundle\Serializer\Serializer: '@jms_serializer.serializer'

  Erp\Bundle\CoreBundle\Infrastructure\ORM\Service\SimpleCommandHandlerService:
    arguments:
      - "@doctrine.orm.default_entity_manager"

  Erp\Bundle\CoreBundle\Domain\CQRS\SimpleCommandHandler:
    alias: Erp\Bundle\CoreBundle\Infrastructure\ORM\Service\SimpleCommandHandlerService
    public: true

  Erp\Bundle\CoreBundle\Infrastructure\ORM\Service\SimpleCommandService:
    arguments:
      - "@doctrine.orm.default_entity_manager"

  # twig
  Erp\Bundle\CoreBundle\Twig\VfilterRuntime:
    tags:
      - { name: twig.runtime }

  Erp\Bundle\CoreBundle\Twig\SformatRuntime:
    tags:
      - { name: twig.runtime }

  # alias
  Erp\Bundle\CoreBundle\Domain\CQRS\SimpleCommand: '@Erp\Bundle\CoreBundle\Infrastructure\ORM\Service\SimpleCommandService'
  Erp\Bundle\CoreBundle\Domain\CQRS\TempFileItemQuery:
    alias: Erp\Bundle\CoreBundle\Infrastructure\ORM\Service\TempFileItemQueryService
    public: true

  #Entity Listerner
  Erp\Bundle\CoreBundle\Infrastructure\ORM\Listener\TempFileItemListener:
    tags:
      - { name: doctrine.orm.entity_listener, entity: Erp\Bundle\CoreBundle\Entity\TempFileItem, event: preFlush }
